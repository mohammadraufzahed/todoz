/user:
  get:
    security:
      - Bearer: []
    tags:
      - User
    summary: Return the user information
    responses:
      200:
        description: User information
        schema:
          type: object
          properties:
            username:
              type: string
              example: jhonedoe
            email:
              type: string
              example: jhonedoeemail@email.com
            photo:
              type: string
              example: https://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50
      401:
        description: unauthorized request
        schema:
          type: object
          properties:
            statusCode:
              type: integer
              example: 401
            error:
              type: string
              example: Unauthorized
            message:
              type: string
              example: Missing authentication
  put:
    summary: Update the user information
    tags:
      - User
    security:
      - Bearer: []
    consumes:
      - application/json
    parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            username:
              type: string
              example: jhonedoe
            email:
              type: string
              example: jhonedoe@email.com
            password:
              type: string
              example: jhonedoenewpassword
    responses:
      200:
        description: User updated successfully
        schema:
          type: object
          properties:
            status:
              type: string
              example: ok
            message:
              type: string
              example: User updated successfully
      406:
        description: Something are missing in the request body
        schema:
          type: object
          properties:
            status:
              type: string
              example: failed
            message:
              type: string
              example: password is required
      504:
        description: Something goes wrong
        schema:
          type: object
          properties:
            status:
              type: string
              example: failed
            message:
              type: string
              example: something goes wrong
  delete:
    summary: Delete the user account
    tags:
      - User
    security:
      - Bearer: []
    consumes:
      - application/json
    responses:
      200:
        description: User deleted successfully
        schema:
          type: object
          properties:
            status:
              type: string
              example: ok
            message:
              type: string
              example: User deleted successfully
      401:
        description: Your not authenticated
        schema:
          type: object
          properties:
            statusCode:
              type: integer
              example: 401
            error:
              type: string
              example: Unauthorized
            message:
              type: string
              example: Invalid credentials
            attributes:
              type: object
              properties:
                error:
                  type: string
                  example: Invalid credentials
